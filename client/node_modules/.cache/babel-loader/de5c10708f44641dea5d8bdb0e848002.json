{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar colors = require('../colors.js');\n\nfunction findPaletteByColor(searchColor) {\n  var result = Object.values(colors.colors).filter(function (color) {\n    return typeof color !== \"string\";\n  }).find( // We need to declare the result of the `filter` function's callback to\n  // tell TypeScript we are narrowing the type. By default,\n  // `Array.prototype.filter` has the same return type as it's given as an\n  // input; we're explicitly doing something different here.\n  // @see https://github.com/Microsoft/TypeScript/issues/7657#issuecomment-228697078\n  function (color) {\n    return Object.values(color).includes(searchColor);\n  });\n\n  if (!result) {\n    throw new Error(\"Could not find color in palette\");\n  } // We know that the interface conforms to one of these, but we can't infer\n  // this because we defined all the palettes `as const` so we can restrict\n  // input to only values in those palettes.\n\n\n  return result;\n}\n\nexports.findPaletteByColor = findPaletteByColor;","map":{"version":3,"sources":["../../src/colors/utils/findPaletteByColor.ts"],"names":["colors"],"mappings":";;;;;;;;SAEgB,kB,CACd,W,EAAwB;AAExB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAP,CAAcA,MAAAA,CAAAA,MAAd,EACZ,MADY,CACL,UAAC,KAAD,EAAM;AAAK,WAAA,OAAO,KAAP,KAAiB,QAAjB;AAAyB,GAD/B,EAEZ,IAFY,E;;;;;AAQX,YAAC,KAAD,EAAM;AACJ,WAAO,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB,QAArB,CAA8B,WAA9B,CAAP;AACD,GAVU,CAAf;;AAaA,MAAI,CAAC,MAAL,EAAa;AACX,UAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;AACD,GAjBuB,C;;;;;AAsBxB,SAAO,MAAP;AACD","sourcesContent":["import { colors, ColorPalette, MonochromePalette, ShadedColor } from \"../index\";\n\nexport function findPaletteByColor(\n  searchColor: ShadedColor\n): MonochromePalette | ColorPalette {\n  const result = Object.values(colors)\n    .filter((color) => typeof color !== \"string\")\n    .find(\n      // We need to declare the result of the `filter` function's callback to\n      // tell TypeScript we are narrowing the type. By default,\n      // `Array.prototype.filter` has the same return type as it's given as an\n      // input; we're explicitly doing something different here.\n      // @see https://github.com/Microsoft/TypeScript/issues/7657#issuecomment-228697078\n      (color) => {\n        return Object.values(color).includes(searchColor);\n      }\n    );\n\n  if (!result) {\n    throw new Error(\"Could not find color in palette\");\n  }\n\n  // We know that the interface conforms to one of these, but we can't infer\n  // this because we defined all the palettes `as const` so we can restrict\n  // input to only values in those palettes.\n  return result as MonochromePalette | ColorPalette;\n}\n"]},"metadata":{},"sourceType":"script"}