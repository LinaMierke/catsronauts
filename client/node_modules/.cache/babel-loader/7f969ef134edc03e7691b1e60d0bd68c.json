{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/linamierke/Github/graphql/catdesign/client/src/components/query-result.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { LoadingSpinner } from '@apollo/space-kit/Loaders/LoadingSpinner';\n/**\n * Query Results conditionally renders Apollo useQuery hooks states:\n * loading, error or its children when data is ready\n */\n\nconst QueryResult = ({\n  loading,\n  error,\n  data,\n  children\n}) => {\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ERROR: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        \"data-testid\": \"spinner\",\n        size: \"large\",\n        theme: \"grayscale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nothing to show...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (data) {\n    return children;\n  }\n};\n\n_c = QueryResult;\nexport default QueryResult;\n/** Query Result styled components */\n\nconst SpinnerContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh'\n});\n_c2 = SpinnerContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueryResult\");\n$RefreshReg$(_c2, \"SpinnerContainer\");","map":{"version":3,"sources":["/Users/linamierke/Github/graphql/catdesign/client/src/components/query-result.js"],"names":["React","styled","LoadingSpinner","QueryResult","loading","error","data","children","message","SpinnerContainer","div","display","justifyContent","alignItems","width","height"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,cAAT,QAA+B,0CAA/B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,IAAlB;AAAwBC,EAAAA;AAAxB,CAAD,KAAwC;AAC1D,MAAIF,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAWA,KAAK,CAACG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIJ,OAAJ,EAAa;AACX,wBACE,QAAC,gBAAD;AAAA,6BACE,QAAC,cAAD;AAAgB,uBAAY,SAA5B;AAAsC,QAAA,IAAI,EAAC,OAA3C;AAAmD,QAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAI,CAACE,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIA,IAAJ,EAAU;AACR,WAAOC,QAAP;AACD;AACF,CAjBD;;KAAMJ,W;AAmBN,eAAeA,WAAf;AAEA;;AACA,MAAMM,gBAAgB,GAAGR,MAAM,CAACS,GAAP,CAAW;AAClCC,EAAAA,OAAO,EAAE,MADyB;AAElCC,EAAAA,cAAc,EAAE,QAFkB;AAGlCC,EAAAA,UAAU,EAAE,QAHsB;AAIlCC,EAAAA,KAAK,EAAE,MAJ2B;AAKlCC,EAAAA,MAAM,EAAE;AAL0B,CAAX,CAAzB;MAAMN,gB","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { LoadingSpinner } from '@apollo/space-kit/Loaders/LoadingSpinner';\n\n/**\n * Query Results conditionally renders Apollo useQuery hooks states:\n * loading, error or its children when data is ready\n */\nconst QueryResult = ({ loading, error, data, children }) => {\n  if (error) {\n    return <p>ERROR: {error.message}</p>;\n  }\n  if (loading) {\n    return (\n      <SpinnerContainer>\n        <LoadingSpinner data-testid=\"spinner\" size=\"large\" theme=\"grayscale\" />\n      </SpinnerContainer>\n    );\n  }\n  if (!data) {\n    return <p>Nothing to show...</p>;\n  }\n  if (data) {\n    return children;\n  }\n};\n\nexport default QueryResult;\n\n/** Query Result styled components */\nconst SpinnerContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh',\n});\n"]},"metadata":{},"sourceType":"module"}