{"version":3,"file":"TextField.js","sources":["../src/TextField/TextField.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { ClassNames, jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport * as typography from \"../typography\";\nimport { colors } from \"../colors\";\nimport { IconWarningSolid } from \"../icons/IconWarningSolid\";\nimport { IconInfoSolid } from \"../icons/IconInfoSolid\";\nimport classnames from \"classnames\";\n\ninterface FormControlProps {\n  as?: React.ReactElement | keyof JSX.IntrinsicElements;\n}\n\n/**\n * Component that wraps the outside of a form element and all it's contents\n */\nexport const FormControl: React.FC<FormControlProps> = ({\n  as = \"div\",\n  children,\n}) => {\n  return React.isValidElement(as)\n    ? React.cloneElement(as, undefined, children)\n    : React.createElement(as, undefined, children);\n};\n\ninterface InputLabelProps\n  extends React.DetailedHTMLProps<\n    React.LabelHTMLAttributes<HTMLLabelElement>,\n    HTMLLabelElement\n  > {\n  as?: React.ReactElement | keyof JSX.IntrinsicElements;\n}\n\nexport const InputLabel = React.forwardRef<HTMLLabelElement, InputLabelProps>(\n  ({ as = \"label\", children, ...props }, ref) => {\n    return (\n      <ClassNames>\n        {({ css, cx }) => {\n          const element = React.isValidElement(as)\n            ? as\n            : React.createElement(as);\n\n          return React.cloneElement(\n            element,\n            {\n              ...props,\n              className: cx(\n                css({\n                  paddingBottom: 8,\n                  ...typography.base.base,\n                  fontWeight: 600,\n                }),\n                element.props.className\n              ),\n              ref,\n            },\n            children\n          );\n        }}\n      </ClassNames>\n    );\n  }\n);\n\ninterface Props {\n  /**\n   * Passed through to the underlying `input`\n   */\n  autoFocus?: boolean;\n\n  /**\n   * Class name that will be applied to the wrapping `div` around the component\n   */\n  className?: string;\n\n  /**\n   * Value an uncontrolled input will default to\n   */\n  defaultValue?: string;\n\n  /**\n   * Visible description\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Disable the input\n   */\n  disabled?: boolean;\n\n  /**\n   * Content to show in the event there is an error in the input. This will\n   * change the appearance of the input and will replace text passed via\n   * `helper`.\n   */\n  error?: React.ReactNode;\n\n  /**\n   * Extra information displayed below input. This will be replaced by `error` if it is passed\n   */\n  helper?: React.ReactNode;\n\n  /**\n   * Icon to have at the left of the input\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * Override how the `input` is rendered. You can pass either an intrinisic jsx element as a string (like \"input\") or a react element (`<input />`)\n   *\n   * If you pass a react element, props that we add are spread onto the input.\n   *\n   * @default \"input\"\n   */\n  inputAs?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  onFocus?: React.FocusEventHandler<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler<HTMLInputElement>;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n\n  /**\n   * Visible title\n   */\n  label?: React.ReactNode;\n\n  /**\n   * A short hint that describes the expected value of the input field\n   */\n  placeholder?: string;\n\n  /**\n   * Size of text and padding inside the input\n   *\n   * Defaults to `standard`\n   */\n  size?: \"small\" | \"standard\" | \"large\";\n\n  /**\n   * Whether or not to show the circle i icon to the left of helper text\n   *\n   * Defaults to `false`\n   */\n  showInfoIcon?: boolean;\n\n  /**\n   * Value of a controlled input\n   */\n  value?: string | number;\n\n  /**\n   * Name to give the input\n   */\n  name?: string;\n\n  /**\n   * Type of input field\n   */\n  type?: string;\n}\n\n/**\n * Emulates an `<input>` with the automatic layout of a label, description, helper\n * text, and error text.\n */\nexport const TextField: React.FC<Props> = ({\n  autoFocus,\n  className,\n  defaultValue,\n  description,\n  disabled,\n  error,\n  helper,\n  icon,\n  inputAs = \"input\",\n  label,\n  name,\n  onFocus,\n  onBlur,\n  onChange,\n  placeholder,\n  showInfoIcon,\n  size = \"standard\",\n  type,\n  value,\n}) => (\n  <ClassNames>\n    {({ css, cx }) => {\n      const inputProps = {\n        autoFocus,\n        defaultValue,\n        disabled,\n        name,\n        onFocus,\n        onBlur,\n        onChange,\n        placeholder,\n        type,\n        value,\n        className: cx(\n          css({\n            backgroundColor: disabled ? colors.silver.light : colors.white,\n            border: \"solid 1px\",\n            borderColor: error ? colors.red.base : colors.silver.darker,\n            \"::placeholder\": {\n              color: disabled ? colors.grey.lighter : colors.grey.light,\n              opacity: 1,\n            },\n            borderRadius: 4,\n            flex: 1,\n            height: size === \"standard\" ? 36 : size === \"small\" ? 28 : 42,\n            ...(size === \"small\"\n              ? typography.base.small\n              : typography.base.base),\n            marginRight: icon ? -30 : 0,\n            paddingLeft: icon ? 34 : size === \"small\" ? 8 : 12,\n            paddingRight: size === \"small\" ? 8 : 12,\n            width: \"100%\",\n            \":hover,  &[data-force-hover-state]\": {\n              borderColor:\n                !disabled && !error\n                  ? colors.grey.light\n                  : error\n                  ? colors.red.base\n                  : colors.silver.darker,\n            },\n            \":focus, &[data-force-focus-state]\": {\n              borderColor:\n                !disabled && !error\n                  ? colors.blue.light\n                  : error\n                  ? colors.red.base\n                  : colors.silver.darker,\n              outline: \"none\",\n            },\n          })\n        ),\n      };\n\n      return (\n        <FormControl as={<div className={className} />}>\n          <InputLabel>\n            <React.Fragment>\n              {label != null && <div css={{ marginBottom: 4 }}>{label}</div>}\n              {description != null && (\n                <div\n                  css={{\n                    ...typography.base.base,\n                    color: colors.black.base,\n                  }}\n                >\n                  {description}\n                </div>\n              )}\n              <div\n                css={{\n                  marginTop: 8,\n                  position: \"relative\",\n                }}\n              >\n                {icon && (\n                  <div\n                    css={{\n                      position: \"absolute\",\n                      display: \"inline-flex\",\n                      left: 12,\n                      top: \"50%\",\n                      transform: \"translateY(-50%)\",\n                    }}\n                  >\n                    {icon}\n                  </div>\n                )}\n\n                {React.isValidElement(inputAs)\n                  ? React.cloneElement(inputAs, {\n                      ...inputProps,\n                      className: classnames(\n                        inputProps.className,\n                        inputAs.props.className\n                      ),\n                    })\n                  : React.createElement(inputAs, inputProps)}\n              </div>\n            </React.Fragment>\n          </InputLabel>\n          <div\n            css={{\n              marginTop: 8,\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            {(helper || error) && (\n              <div\n                css={{\n                  ...typography.base.small,\n                  color: error ? colors.red.base : colors.grey.base,\n                  display: \"flex\",\n                  marginRight: 8,\n                  marginTop: 8,\n                  paddingLeft: size === \"small\" ? 8 : 12,\n                }}\n              >\n                {error ? (\n                  <IconWarningSolid\n                    css={{\n                      height: 15,\n                      marginRight: 8,\n                      position: \"relative\",\n                      top: 2,\n                      width: 15,\n                    }}\n                  />\n                ) : showInfoIcon && helper ? (\n                  <IconInfoSolid\n                    css={{\n                      color: colors.blue.base,\n                      height: 15,\n                      marginRight: 8,\n                      position: \"relative\",\n                      top: 2,\n                      width: 15,\n                    }}\n                  />\n                ) : null}\n\n                <div>{error || helper}</div>\n              </div>\n            )}\n          </div>\n        </FormControl>\n      );\n    }}\n  </ClassNames>\n);\n"],"names":["React","jsx","ClassNames","typography.base.base","colors","typography.base.small","IconWarningSolid","IconInfoSolid"],"mappings":"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"}