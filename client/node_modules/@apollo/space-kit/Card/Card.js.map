{"version":3,"file":"Card.js","sources":["../src/Card/Card.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { colors } from \"../colors\";\nimport { base } from \"../typography\";\nimport { jsx, ClassNames } from \"@emotion/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst descriptionMaxWidth = 760;\n\ninterface CardProps\n  extends React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    CardSectionProps {\n  /**\n   * The content of the card,\n   * appears below the title and description\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Override how the `header` is rendered. You can pass either an intrinisic\n   * jsx element as a string (like \"h1\") or a react element (`<h1 />`)\n   *\n   * If you pass a react element, props that we add are spread onto the input.\n   *\n   * @default \"h2\"\n   */\n  headingAs?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  /**\n   * large has bigger heading & smaller padding than standard\n   */\n  size?: \"standard\" | \"large\";\n}\n\nexport const Card: React.FC<CardProps> = ({\n  children,\n  heading,\n  actions,\n  description,\n  headingAs = \"h2\",\n  size,\n  ...otherProps\n}) => (\n  <section\n    {...otherProps}\n    css={{\n      backgroundColor: colors.white,\n      color: colors.black.base,\n      boxShadow: `0 4px 8px 0 rgba(0, 0, 0, .04)`,\n      borderStyle: \"solid\",\n      borderRadius: 8,\n      borderWidth: 1,\n      borderColor: colors.silver.dark,\n      paddingLeft: 24,\n      paddingRight: 24,\n      paddingTop: size === \"large\" ? 16 : 28,\n      paddingBottom: size === \"large\" ? 16 : 28,\n    }}\n  >\n    <div\n      css={{\n        display: \"flex\",\n        marginBottom: React.Children.toArray(children).some(Boolean) ? 24 : 0,\n      }}\n    >\n      <div\n        css={{\n          flex: \"1 1 0%\",\n          marginRight: \"auto\",\n          overflow: \"hidden\",\n        }}\n      >\n        <div>\n          {heading && (\n            <ClassNames>\n              {({ css, cx }) => {\n                const headingProps = {\n                  className: cx(\n                    css({\n                      color: colors.black.base,\n                      display: \"flex\",\n                      fontWeight: 600,\n                      marginBottom: 0,\n                      marginTop: 0,\n                      ...(size === \"large\" ? base.xlarge : base.large),\n                    })\n                  ),\n                  children: heading,\n                };\n\n                return React.isValidElement(headingAs)\n                  ? React.cloneElement(headingAs, {\n                      ...headingProps,\n                      className: classnames(\n                        headingProps.className,\n                        headingAs.props.className\n                      ),\n                    })\n                  : React.createElement(headingAs, headingProps);\n              }}\n            </ClassNames>\n          )}\n          {description && (\n            <div\n              css={{\n                ...base.base,\n                color: colors.grey.base,\n                maxWidth: actions ? descriptionMaxWidth : \"\",\n              }}\n            >\n              {description}\n            </div>\n          )}\n        </div>\n      </div>\n      {actions && <div css={{ marginLeft: 16 }}>{actions}</div>}\n    </div>\n    {children}\n  </section>\n);\n\nCard.propTypes = {\n  children: PropTypes.node,\n  heading: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.node,\n  size: PropTypes.oneOf<CardProps[\"size\"]>([\"standard\", \"large\"]),\n};\n\ninterface CardSectionProps {\n  heading?: React.ReactNode;\n\n  /**\n   * the description for this card\n   * appears in grey below the title\n   */\n  description?: React.ReactNode;\n\n  /**\n   * actions could be a button\n   * or a tooltip or anything the card should display\n   * aligned with the title on the right\n   */\n  actions?: React.ReactNode;\n}\n\nexport const CardSection: React.FC<CardSectionProps> = ({\n  heading,\n  description,\n  actions,\n}) => (\n  <section\n    css={{\n      display: \"flex\",\n      marginTop: 24,\n    }}\n  >\n    <div css={{ flex: \"1 1 0%\", marginRight: \"auto\" }}>\n      <div>\n        {heading && (\n          <div\n            css={{\n              display: \"flex\",\n              color: colors.black.base,\n              ...base.base,\n            }}\n          >\n            <span\n              css={{\n                fontWeight: 600,\n                flex: \"1 1 0%\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                whiteSpace: \"nowrap\",\n                paddingRight: 24,\n              }}\n            >\n              {heading}\n            </span>\n          </div>\n        )}\n        {description && (\n          <div\n            css={{\n              ...base.base,\n              color: colors.grey.base,\n              maxWidth: actions ? descriptionMaxWidth : \"\",\n            }}\n          >\n            {description}\n          </div>\n        )}\n      </div>\n    </div>\n    {actions && <div css={{ marginLeft: 16 }}>{actions}</div>}\n  </section>\n);\n\nCardSection.propTypes = {\n  heading: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.node,\n};\n\n/**\n * A border line that can go between two card sections, with appropriate margin applied\n */\nexport const CardSeperator: React.FC = () => (\n  <hr\n    css={{\n      height: 1,\n      borderWidth: 0,\n      backgroundColor: colors.silver.dark,\n      marginTop: 24,\n      marginBottom: 24,\n    }}\n  />\n);\n"],"names":["jsx","colors","React","ClassNames","base.xlarge","base.large","base.base"],"mappings":"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"}