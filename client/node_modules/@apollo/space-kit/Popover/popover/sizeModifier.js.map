{"version":3,"file":"sizeModifier.js","sources":["../../src/Popover/popover/sizeModifier.ts"],"sourcesContent":["import computeAutoPlacement from \"@popperjs/core/lib/utils/computeAutoPlacement\";\nimport detectOverflow from \"@popperjs/core/lib/utils/detectOverflow\";\nimport getOppositePlacement from \"@popperjs/core/lib/utils/getOppositePlacement\";\nimport getOppositeVariationPlacement from \"@popperjs/core/lib/utils/getOppositeVariationPlacement\";\nimport {\n  BasePlacement,\n  Boundary,\n  Modifier,\n  ModifierArguments,\n  Padding,\n  Placement,\n  Rect,\n  RootBoundary,\n} from \"@popperjs/core\";\n\ninterface Options {\n  allowedAutoPlacements: Array<Placement>;\n  altBoundary: boolean;\n  boundary: Boundary;\n  fallbackPlacements: Array<Placement>;\n  flipVariations: boolean;\n  padding: Padding;\n  rootBoundary: RootBoundary;\n}\n\n/**\n * Get the base of a `Placement`, meaning strip off `-start` and `-end`\n *\n * This will also work with `auto`, which is why this is modified from the\n * internal popper version\n */\nfunction getBasePlacement(\n  placement: Placement | \"auto\"\n): BasePlacement | \"auto\" {\n  return (placement.split(\"-\")[0] as any) as BasePlacement | \"auto\";\n}\n\nfunction getExpandedFallbackPlacements(placement: Placement): Array<Placement> {\n  if (getBasePlacement(placement) === \"auto\") {\n    return [];\n  }\n\n  const oppositePlacement = getOppositePlacement(placement);\n\n  return [\n    getOppositeVariationPlacement(placement),\n    oppositePlacement,\n    getOppositeVariationPlacement(oppositePlacement),\n  ];\n}\n\n/**\n * Find the placement with the minimum vertical overflow. If there is a tie\n * between placements, the first placement wins.\n */\nfunction findPlacementWithMinimumVerticalOverflow({\n  placementOverflows,\n  popperRect,\n  preventOverflow = { x: 0, y: 0 },\n}: {\n  placementOverflows: {\n    placement: Placement;\n    overflow: ReturnType<typeof detectOverflow>;\n  }[];\n  popperRect: Rect;\n  preventOverflow?: { x: number; y: number };\n}) {\n  const { height } = popperRect;\n  const { y } = preventOverflow;\n\n  const placementCalculations = placementOverflows.map(\n    ({ placement, overflow }) => {\n      const verticalOverflow =\n        overflow[getBasePlacement(placement) === \"top\" ? \"top\" : \"bottom\"];\n\n      return {\n        placement,\n        overflowPixels: Math.max(0, verticalOverflow),\n        // The `overflow` can be negative here; this is how the container can\n        // expand when we are resizing to expose more of the clipped content.\n        maxHeight: height - verticalOverflow - y,\n      };\n    }\n  );\n\n  // Sort `placementCalculations` by which placement has the least overflow\n  // pixels. If there is a tie, use the preferred placement.\n  placementCalculations.sort((a, b) => {\n    if (b.overflowPixels !== a.overflowPixels) {\n      return a.overflowPixels - b.overflowPixels;\n    }\n\n    // If the heights are the same then we have no overflow in these two\n    // placements. We must prioritize the user-specified placement order here.\n    // While `overflowed` is already in the correct order, preserving original\n    // sort order is explicitly stated to not be stable in the\n    // [`Array.prototype.sort`\n    // spec](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.sort)\n    //\n    // We could build an index for the indicies, but I don't think we'll have\n    // any performance issues because the placement lists are short.\n    const aPlacementWeight = placementOverflows.findIndex(\n      (overflow) => overflow.placement === a.placement\n    );\n    const bPlacementWeight = placementOverflows.findIndex(\n      (overflow) => overflow.placement === b.placement\n    );\n\n    return aPlacementWeight - bPlacementWeight;\n  });\n\n  return placementCalculations[0];\n}\n\n/**\n * Find the last ordered modifier that includes a `padding` configuration.\n * Defaults to `0` if none are found.\n */\nfunction getPaddingFromState(\n  state: ModifierArguments<Options>[\"state\"]\n): Padding {\n  return state.orderedModifiers.reduce<Padding>((accumulator, modifier) => {\n    if (typeof modifier.options?.padding != \"undefined\") {\n      accumulator = modifier.options.padding;\n    }\n\n    return accumulator;\n  }, 0);\n}\n\n/**\n * Calculate the placement and max size\n */\nfunction getPlacementAndMaxSize({\n  state,\n  options,\n}: ModifierArguments<Options>): {\n  placement: Placement;\n  maxSize: { height: number };\n} {\n  const {\n    fallbackPlacements: specifiedFallbackPlacements,\n    padding = getPaddingFromState(state),\n    boundary = \"clippingParents\",\n    rootBoundary = \"viewport\",\n    altBoundary,\n    flipVariations = true,\n    allowedAutoPlacements,\n  } = options;\n\n  /**\n   * Preferred placement\n   *\n   * Taken from options\n   */\n  const preferredPlacement = state.options.placement;\n\n  /**\n   * Base placement from `preferredPlacement`\n   */\n  const basePlacement = getBasePlacement(preferredPlacement);\n\n  /**\n   * Represents if the `preferredPlacement` is a `BasePlacement` (meaning it has\n   * no `-begin` or `-end`)\n   */\n  const isBasePlacement = basePlacement === preferredPlacement;\n\n  /**\n   * List of fallback placements\n   *\n   * Either passed in with `specifiedFallbackPlacements`, or calculated\n   * depending on\n   * [`flipVariations`](https://popper.js.org/docs/v2/modifiers/flip/#flipvariations)\n   *\n   * Copied verbatim from popper's flip modifier source; @see\n   * https://github.com/popperjs/popper-core/blob/de867743d4b841af88675691064c8271452e150f/src/modifiers/flip.js#L55-L59\n   */\n  const fallbackPlacements =\n    specifiedFallbackPlacements ||\n    (isBasePlacement || !flipVariations\n      ? [getOppositePlacement(preferredPlacement)]\n      : getExpandedFallbackPlacements(preferredPlacement));\n\n  /**\n   * Aggregate of all placements, including preferred and fallbacks.\n   *\n   * This is copied verbatim from the popper's flip modifier source; @see\n   * https://github.com/popperjs/popper-core/blob/de867743d4b841af88675691064c8271452e150f/src/modifiers/flip.js#L61-L77\n   */\n  const placements = [preferredPlacement, ...fallbackPlacements].reduce<\n    Placement[]\n  >((acc, placement) => {\n    return acc.concat(\n      getBasePlacement(placement) === \"auto\"\n        ? computeAutoPlacement(state, {\n            placement,\n            boundary,\n            rootBoundary,\n            padding,\n            flipVariations,\n            allowedAutoPlacements,\n          })\n        : placement\n    );\n  }, []);\n\n  const popperRect = state.rects.popper;\n\n  /**\n   * Array calculated from `placements` with the calculated values of each\n   * `placement`. This will be used to determine if we're capable of flipping\n   * the element to display it or of we have to set the `max-height` too.\n   */\n  const placementOverflows = placements.map((placement) => ({\n    placement,\n    overflow: detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      altBoundary,\n      padding,\n    }),\n  }));\n\n  /**\n   * First placement that does not overflow on any side\n   */\n  const firstPlacementWithNoOverflow = placementOverflows.find(\n    ({ overflow }) =>\n      overflow.bottom <= 0 &&\n      overflow.top <= 0 &&\n      overflow.right <= 0 &&\n      overflow.left <= 0\n  );\n\n  if (firstPlacementWithNoOverflow) {\n    return {\n      placement: firstPlacementWithNoOverflow.placement,\n      maxSize: popperRect,\n    };\n  }\n\n  const minimumOverflowPlacement = findPlacementWithMinimumVerticalOverflow({\n    placementOverflows,\n    popperRect: state.rects.popper,\n    preventOverflow: state.modifiersData.preventOverflow,\n  });\n\n  return {\n    placement: minimumOverflowPlacement.placement,\n    maxSize: { height: minimumOverflowPlacement.maxHeight },\n  };\n}\n\n/**\n * Popper [modifier](https://popper.js.org/docs/v2/modifiers/) based on popper's\n * built-in [flip]() modifier and the community\n * [`maxSize`](https://www.npmjs.com/package/popper-max-size-modifier). Neither\n * of those fit our needs because the `flip` modifier can't make an element\n * scrollable and the max size modifier only sets the max size, it doesn't try\n * to figure out the best position to use with a max size.\n *\n * This combines the logic of those two to create a modifier that will behave\n * exactly like `flip`, but if there are no placements that can display the\n * element in it's entirety, it'll find the placement that can show the most\n * content with a max-height.\n */\nexport const sizeModifier: Modifier<\"maxSize\", Options> = {\n  name: \"maxSize\",\n  enabled: true,\n  phase: \"main\",\n  requiresIfExists: [\"offset\", \"preventOverflow\", \"flip\"],\n  // `_skip` is a custom property we use internally to prevent us from flipping\n  // more than once in a single tick.\n  data: { _skip: false },\n  fn: (modifierArguments) => {\n    const { placement, maxSize } = getPlacementAndMaxSize(modifierArguments);\n\n    // Set the max height to be written in the `write` phase. See\n    // https://www.npmjs.com/package/popper-max-size-modifier and\n    // https://codesandbox.io/s/great-tesla-3roz7 for prior art\n    modifierArguments.state.modifiersData[modifierArguments.name] = {\n      height: maxSize.height,\n    };\n\n    // If the placement has changed and we haven't already changed the\n    // placement, then change it.\n    if (\n      modifierArguments.state.placement !== placement &&\n      !modifierArguments.state.modifiersData[modifierArguments.name]._skip\n    ) {\n      modifierArguments.state.modifiersData[\n        modifierArguments.name\n      ]._skip = true;\n      modifierArguments.state.placement = placement;\n      // If we're applying a new position, then all other modifiers need to be\n      // completely re-run, which is what setting `state.reset = true` does.\n      // @see https://popper.js.org/docs/v2/modifiers/#fn\n      modifierArguments.state.reset = true;\n    }\n  },\n};\n"],"names":["__spreadArrays"],"mappings":"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"}