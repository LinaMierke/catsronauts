{"version":3,"file":"index.js","sources":["../src/shared/cloneElements.tsx","../src/ListItem/index.tsx"],"sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { ClassNames } from \"@emotion/core\";\n\n/**\n * Clone elements in order. All `className`, `style`, and `css` props will be\n * propogated and merged. The leftmost `ref` will be maintained.\n */\nexport const cloneElements = (\n  ...elements: readonly React.ReactElement[]\n): React.ReactElement => {\n  return (\n    <ClassNames>\n      {({ css, cx }) => {\n        if (elements.length === 1) return elements[0];\n        return elements.reduce((accumulator, element) => {\n          return React.cloneElement(accumulator, {\n            ...element.props,\n            className: classnames(\n              element.props.className,\n              accumulator.props.className,\n              // If the parent component is using emotion with the jsx pragma, we\n              // have to get fancy and intercept the styles to use with the\n              // `ClassNames` wrapper.\n              accumulator.props.css\n                ? cx(css(accumulator.props.css.styles))\n                : null\n            ),\n            style: { ...element.props.style, ...accumulator.props.style },\n            // Since we're cloning `as` with the `original` props added, we're\n            // going to lose the `ref`. We have to grab it from the\n            // `React.ReactElement` instance\n            ref: (accumulator as any).ref ?? (element as any).ref,\n          });\n        });\n      }}\n    </ClassNames>\n  );\n};\n","import type { Property } from \"csstype\";\nimport React from \"react\";\nimport { ClassNames } from \"@emotion/core\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\nimport tinycolor from \"tinycolor2\";\nimport { colors } from \"../colors\";\nimport { useListConfig } from \"../ListConfig\";\nimport { verticalListMarginFromPadding } from \"../shared/verticalListMarginFromPadding\";\nimport { cloneElements } from \"../shared/cloneElements\";\nimport classnames from \"classnames\";\n\nfunction getIconHorizontalPadding(\n  iconSize: NonNullable<ReturnType<typeof useListConfig>[\"iconSize\"]>\n): Property.Padding<number> {\n  switch (iconSize) {\n    case \"large\":\n      return 16;\n    case \"normal\":\n      return 12;\n    case \"small\":\n      return 8;\n    default:\n      assertUnreachable(iconSize);\n  }\n}\n\nfunction getIconSize(\n  iconSize: NonNullable<ReturnType<typeof useListConfig>[\"iconSize\"]>\n): Property.Width<number> {\n  switch (iconSize) {\n    case \"large\":\n      return 18;\n    case \"normal\":\n      return 16;\n    case \"small\":\n      return 10;\n    default:\n      assertUnreachable(iconSize);\n  }\n}\n\nfunction getIconMarginLeft(\n  iconSize: NonNullable<ReturnType<typeof useListConfig>[\"iconSize\"]>\n): Property.MarginLeft<number> {\n  switch (iconSize) {\n    case \"large\":\n    case \"normal\":\n      return \"initial\";\n    case \"small\":\n      return -7;\n    default:\n      assertUnreachable(iconSize);\n  }\n}\n\ninterface Props\n  extends Pick<\n      React.DetailedHTMLProps<\n        React.HTMLAttributes<HTMLDivElement>,\n        HTMLDivElement\n      >,\n      \"className\" | \"onClick\" | \"style\" | \"role\"\n    >,\n    Partial<\n      Pick<ReturnType<typeof useListConfig>, \"endIconAs\" | \"startIconAs\">\n    > {\n  /**\n   * Override the the default element used to render\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged.\n   *\n   * @default <div />\n   */\n  as?: React.ReactElement;\n\n  /** Icon to display at the end of a list item.\n   *\n   * This element will always be rendered unless the value is `undefined`. If\n   * you want an empty node, a spacer for example, use `null`\n   */\n  endIcon?: React.ReactNode;\n\n  /**\n   * Indicates that the `ListItem` is being highlighted\n   */\n  highlighted?: boolean;\n\n  /**\n   * Indicates if this list item can be itneracted with. Defaults to `true`. If\n   * set to `false`, there will be no hover effects.\n   *\n   * This is _not_ the same as `disabled`\n   */\n  interactive?: boolean;\n  selected?: boolean;\n  /** Icon to display at the start of a list item.\n   *\n   * This element will always be rendered unless the value is `undefined`. If\n   * you want an empty node, a spacer for example, use `null`\n   */\n  startIcon?: React.ReactNode;\n}\n\nexport const ListItem = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<Props>\n>(\n  (\n    {\n      as = <div />,\n      children,\n      endIcon,\n      endIconAs: endIconAsProp,\n      highlighted = false,\n      interactive = true,\n      selected = false,\n      startIcon,\n      startIconAs: startIconAsProp,\n      ...props\n    },\n    ref\n  ) => {\n    const {\n      hoverColor,\n      iconSize,\n      padding,\n      selectedColor,\n      ...listConfig\n    } = useListConfig();\n\n    const endIconAs = endIconAsProp ?? listConfig.endIconAs;\n    const startIconAs = startIconAsProp ?? listConfig.startIconAs;\n\n    const selectedTextColor = tinycolor\n      .mostReadable(selectedColor, [colors.white, colors.grey.darker], {\n        level: \"AA\",\n        size: \"small\",\n      })\n      .toString();\n    const selectedBackgroundColor = selectedColor;\n\n    const selectedStyles = interactive && {\n      backgroundColor: selectedBackgroundColor,\n      color: selectedTextColor,\n    };\n\n    const highlightedStyles = hoverColor &&\n      interactive && {\n        backgroundColor: hoverColor,\n        color: tinycolor\n          .mostReadable(hoverColor, [colors.white, colors.grey.darker], {\n            level: \"AA\",\n            size: \"small\",\n          })\n          .toString(),\n      };\n\n    const verticalMargin = verticalListMarginFromPadding(padding) / 2;\n\n    return (\n      <ClassNames>\n        {({ css, cx }) =>\n          cloneElements(\n            as,\n            <div\n              {...props}\n              className={classnames(\n                props.className,\n                cx(\n                  css({\n                    ...(selected && selectedStyles),\n                    ...{ \"&[aria-expanded=true]\": selectedStyles },\n                    ...(!selected && {\n                      \"&:hover, &[data-force-hover-state]\": highlightedStyles,\n                    }),\n                    ...(highlighted && !selected && highlightedStyles),\n                    alignItems: \"center\",\n                    cursor: interactive ? \"pointer\" : undefined,\n                    borderRadius: 4,\n                    display: \"flex\",\n                    height:\n                      padding === \"normal\"\n                        ? 28\n                        : padding === \"relaxed\"\n                        ? 40\n                        : assertUnreachable(padding),\n                    paddingLeft: 12,\n                    paddingRight: 12,\n                    paddingTop: 4,\n                    paddingBottom: 4,\n                    marginTop: verticalMargin,\n                    marginBottom: verticalMargin,\n                  })\n                )\n              )}\n              ref={ref}\n            >\n              {typeof startIcon !== \"undefined\" &&\n                cloneElements(\n                  startIconAs,\n                  <div\n                    className={cx(\n                      css({\n                        display: \"flex\",\n                        flex: \"none\",\n                        marginLeft: getIconMarginLeft(iconSize),\n                        marginRight: getIconHorizontalPadding(iconSize),\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                        width: getIconSize(iconSize),\n                      })\n                    )}\n                  >\n                    {startIcon}\n                  </div>\n                )}\n              <div\n                className={cx(\n                  css({\n                    flex: \"1\",\n                    /* This is weird but it's necessary to truncate list items */\n                    minWidth: 0,\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    whiteSpace: \"nowrap\",\n                  })\n                )}\n              >\n                {children}\n              </div>\n              {typeof endIcon !== \"undefined\" &&\n                cloneElements(\n                  endIconAs,\n                  <div\n                    className={cx(\n                      css({\n                        display: \"flex\",\n                        flex: \"none\",\n                        justifyContent: \"flex-end\",\n                        marginLeft: getIconHorizontalPadding(iconSize),\n                        overflow: \"hidden\",\n                        whiteSpace: \"nowrap\",\n                        width: getIconSize(iconSize),\n                      })\n                    )}\n                  >\n                    {endIcon}\n                  </div>\n                )}\n            </div>\n          )\n        }\n      </ClassNames>\n    );\n  }\n);\n"],"names":["React","ClassNames","assertUnreachable","useListConfig","colors","verticalListMarginFromPadding"],"mappings":"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"}