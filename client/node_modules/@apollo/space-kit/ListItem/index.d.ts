import React from "react";
import { useListConfig } from "../ListConfig";
interface Props extends Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "className" | "onClick" | "style" | "role">, Partial<Pick<ReturnType<typeof useListConfig>, "endIconAs" | "startIconAs">> {
    /**
     * Override the the default element used to render
     *
     * All props provided will be merged with props that this component adds,
     * including `className`s being merged.
     *
     * @default <div />
     */
    as?: React.ReactElement;
    /** Icon to display at the end of a list item.
     *
     * This element will always be rendered unless the value is `undefined`. If
     * you want an empty node, a spacer for example, use `null`
     */
    endIcon?: React.ReactNode;
    /**
     * Indicates that the `ListItem` is being highlighted
     */
    highlighted?: boolean;
    /**
     * Indicates if this list item can be itneracted with. Defaults to `true`. If
     * set to `false`, there will be no hover effects.
     *
     * This is _not_ the same as `disabled`
     */
    interactive?: boolean;
    selected?: boolean;
    /** Icon to display at the start of a list item.
     *
     * This element will always be rendered unless the value is `undefined`. If
     * you want an empty node, a spacer for example, use `null`
     */
    startIcon?: React.ReactNode;
}
export declare const ListItem: React.ForwardRefExoticComponent<Props & {
    children?: React.ReactNode;
} & React.RefAttributes<HTMLDivElement>>;
export {};
