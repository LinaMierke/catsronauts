'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _tslib = require('../_tslib-bcbe0269.js');
var core = require('@emotion/core');
var React = require('react');
var React__default = _interopDefault(React);

var IconTelescope4 = React__default.forwardRef(function (_a, ref) {
    var _b = _a.fill, fill = _b === void 0 ? "none" : _b, _c = _a.stroke, stroke = _c === void 0 ? "currentColor" : _c, _d = _a.weight, weight = _d === void 0 ? "normal" : _d, props = _tslib.__rest(_a, ["fill", "stroke", "weight"]);
    return (core.jsx("svg", _tslib.__assign({ viewBox: "0 0 24 24", ref: ref, css: core.css(templateObject_1 || (templateObject_1 = _tslib.__makeTemplateObject(["\n        * {\n          vector-effect: non-scaling-stroke;\n        }\n        overflow: visible;\n        height: 24px;\n      "], ["\n        * {\n          vector-effect: non-scaling-stroke;\n        }\n        overflow: visible;\n        height: 24px;\n      "]))) }, props),
        core.jsx("g", { fill: fill, stroke: stroke, strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: weight === "normal" ? 1.5 : 1 },
            core.jsx("path", { d: "M3.25 12.75h14.5a1 1 0 0 1 1 1v9.5h0-16.5 0v-9.5a1 1 0 0 1 1-1zM16.5 12.75a6 6 0 1 0-12 0" }),
            core.jsx("path", { d: "M10.5 6.75V4.743a.92.92 0 0 1 .346-.709 1.1 1.1 0 0 1 .806-.233 9.436 9.436 0 0 1 8.575 7.889.9.9 0 0 1-.254.741 1.071 1.071 0 0 1-.77.319H17.25" }),
            core.jsx("path", { d: "M15.975 5.258l1.904-1.922 2.809 2.835-1.843 1.86" }),
            core.jsx("path", { d: "M19.707 5.18l-.877-.88a2.37 2.37 0 0 1 0-3.336l.033-.033a.59.59 0 0 1 .836-.006l.006.006 3.37 3.4a.605.605 0 0 1 0 .851h0a2.37 2.37 0 0 1-3.352.014l-.016-.016zM8.75 16.5h3.5a.5.5 0 0 1 .5.5v6.25h0-4.5 0V17a.5.5 0 0 1 .5-.5zM.75 23.25h19.5" }))));
});
var templateObject_1;

exports.IconTelescope4 = IconTelescope4;
//# sourceMappingURL=IconTelescope4.js.map
