'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _tslib = require('../_tslib-bcbe0269.js');
var core = require('@emotion/core');
var React = require('react');
var React__default = _interopDefault(React);
require('../colors/colors.js');
require('../assertUnreachable-18645656.js');
var index = require('../index-03cf0138.js');
var verticalListMarginFromPadding = require('../verticalListMarginFromPadding-9fe8567b.js');

var List = React__default.forwardRef(function (_a, ref) {
    var children = _a.children, className = _a.className, style = _a.style, endIconAs = _a.endIconAs, hoverColor = _a.hoverColor, iconSize = _a.iconSize, padding = _a.padding, selectedColor = _a.selectedColor, startIconAs = _a.startIconAs, props = _tslib.__rest(_a, ["children", "className", "style", "endIconAs", "hoverColor", "iconSize", "padding", "selectedColor", "startIconAs"]);
    /**
     * Combination of inherited configuration and new configuration passed via
     * props
     */
    var listConfig = _tslib.__assign(_tslib.__assign(_tslib.__assign(_tslib.__assign(_tslib.__assign(_tslib.__assign(_tslib.__assign({}, index.useListConfig()), (endIconAs && { endIconAs: endIconAs })), (hoverColor && { hoverColor: hoverColor })), (iconSize && { iconSize: iconSize })), (padding && { padding: padding })), (selectedColor && { selectedColor: selectedColor })), (startIconAs && { startIconAs: startIconAs }));
    var verticalMargin = -verticalListMarginFromPadding.verticalListMarginFromPadding(listConfig.padding) / 2;
    return (core.jsx(index.ListConfigProvider, _tslib.__assign({}, listConfig),
        core.jsx("div", _tslib.__assign({}, props, { ref: ref, className: className, style: style, css: core.css({
                marginTop: verticalMargin,
                marginBottom: verticalMargin,
                outline: "none",
            }) }), children)));
});

exports.List = List;
//# sourceMappingURL=index.js.map
