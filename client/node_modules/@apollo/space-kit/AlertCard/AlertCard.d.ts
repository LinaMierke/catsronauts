import React, { CSSProperties } from "react";
interface AlertCardProps {
    /**
     * color theme for alert
     * @default "light"
     */
    theme?: "light" | "dark";
    heading: React.ReactNode;
    /**
     * actions could be a button
     * or a tooltip or anything the Alert should display after the children
     */
    actions?: React.ReactNode;
    /**
     * The content of the card, appears below the title
     */
    children?: React.ReactNode;
    /**
     * Override how the `header` is rendered. You can pass either an intrinisic
     * jsx element as a string (like "h1") or a react element (`<h1 />`)
     *
     * If you pass a react element, props that we add are spread onto the input.
     *
     * @default "h2"
     */
    headingAs?: React.ReactElement | keyof JSX.IntrinsicElements;
    /**
     * callback for handling the clicks on the close button.
     */
    onClose: () => void;
    /**
     * layout for longer content
     *
     * @default false
     */
    extended?: boolean;
    className?: string;
    style?: CSSProperties;
    /**
     * Type of alert, this is used to determine the color and icon in the title
     */
    type: "info" | "warn" | "error" | "success";
}
export declare const AlertCard: React.FC<AlertCardProps>;
export {};
