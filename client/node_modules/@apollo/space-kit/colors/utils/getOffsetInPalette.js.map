{"version":3,"file":"getOffsetInPalette.js","sources":["../../src/colors/utils/getOffsetInPalette.ts"],"sourcesContent":["import { MonochromePalette, ColorPalette, ShadedColor } from \"../index\";\nimport { findPaletteByColor } from \"./findPaletteByColor\";\n\nconst monochromePaletteKeys: ReadonlyArray<keyof MonochromePalette> = [\n  \"darker\",\n  \"dark\",\n  \"base\",\n  \"light\",\n  \"lighter\",\n] as const;\n\nconst colorPaletteKeys: ReadonlyArray<keyof ColorPalette> = [\n  \"darkest\",\n  ...monochromePaletteKeys,\n  \"lightest\",\n] as const;\n\nfunction isColorPalette(\n  palette: MonochromePalette | ColorPalette\n): palette is ColorPalette {\n  return Object.prototype.hasOwnProperty.call(palette, \"darkest\");\n}\n\n/**\n * Given a color and a palette the color belongs to, find another color in that\n * palette given an offset. The offset should be a number representing how many\n * shades darker or lighter we want with the direction specificed by\n * `offsetDirection`. If we try to go beyond the bounds, we'll return the\n * closest item we can. In other words, if we pass `Infinity` and `darker`, then\n * we'll return the darkest color in the palette. If we pass `Infinity` and `lighter` we'll\n * return the lightest color in the palette.\n *\n * This function will throw if `color` is not one of the values in `palette`.\n *\n * @param offset A number representing how many shades away from the original\n * `color` to return. If the offset goes beyond the bounds of the palette, the most extreme color\n * in that direction will be chosen.\n * @param offsetDirection Which direction we wish to be offset, `\"lighter\"` or `\"darker\"`.\n * @param color A color in one of our palettes\n */\nexport function getOffsetInPalette(\n  offset: number,\n  offsetDirection: \"lighter\" | \"darker\",\n  color: ShadedColor\n): ShadedColor {\n  /**\n   * Palette this color belongs to\n   */\n  const palette = findPaletteByColor(color);\n\n  /**\n   * A numerical value of the offset with the `offsetDirection` taken into\n   * account. This will be positive for lighter values and negative for darker\n   * values.\n   */\n  const effectiveOffset = offsetDirection === \"lighter\" ? offset : -offset;\n\n  if (isColorPalette(palette)) {\n    const index = Object.keys(palette).findIndex(\n      (paletteKey) => palette[paletteKey as keyof ColorPalette] === color\n    );\n\n    // Use `max` to prevent a negative number. We explicitly do not throw an\n    // error here.\n    return palette[\n      colorPaletteKeys[\n        Math.min(\n          Object.keys(palette).length - 1,\n          Math.max(0, index + effectiveOffset)\n        )\n      ]\n    ] as ShadedColor;\n  }\n\n  const index = Object.keys(palette).findIndex(\n    (paletteKey) => palette[paletteKey as keyof MonochromePalette] === color\n  );\n\n  // Use `max` to prevent a negative number. We explicitly do not throw an\n  // error here.\n  return palette[\n    monochromePaletteKeys[\n      Math.min(\n        Object.keys(palette).length - 1,\n        Math.max(0, index + effectiveOffset)\n      )\n    ]\n  ] as ShadedColor;\n}\n"],"names":["__spreadArrays","findPaletteByColor"],"mappings":";;;;;;;;AAGA,IAAM,qBAAqB,GAA2C;IACpE,QAAQ;IACR,MAAM;IACN,MAAM;IACN,OAAO;IACP,SAAS;CACD,CAAC;AAEX,IAAM,gBAAgB,GAAsCA;IAC1D,SAAS;GACN,qBAAqB;IACxB,UAAU;EACF,CAAC;AAEX,SAAS,cAAc,CACrB,OAAyC;IAEzC,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;CACjE;;;;;;;;;;;;;;;;;;AAmBD,SAAgB,kBAAkB,CAChC,MAAc,EACd,eAAqC,EACrC,KAAkB;;;;IAKlB,IAAM,OAAO,GAAGC,qCAAkB,CAAC,KAAK,CAAC,CAAC;;;;;;IAO1C,IAAM,eAAe,GAAG,eAAe,KAAK,SAAS,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC;IAEzE,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE;QAC3B,IAAM,OAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC1C,UAAC,UAAU,IAAK,OAAA,OAAO,CAAC,UAAgC,CAAC,KAAK,KAAK,GAAA,CACpE,CAAC;;;QAIF,OAAO,OAAO,CACZ,gBAAgB,CACd,IAAI,CAAC,GAAG,CACN,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAK,GAAG,eAAe,CAAC,CACrC,CACF,CACa,CAAC;KAClB;IAED,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC1C,UAAC,UAAU,IAAK,OAAA,OAAO,CAAC,UAAqC,CAAC,KAAK,KAAK,GAAA,CACzE,CAAC;;;IAIF,OAAO,OAAO,CACZ,qBAAqB,CACnB,IAAI,CAAC,GAAG,CACN,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,eAAe,CAAC,CACrC,CACF,CACa,CAAC;CAClB;;;;"}