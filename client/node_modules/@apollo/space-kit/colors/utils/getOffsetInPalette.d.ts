import { ShadedColor } from "../index";
/**
 * Given a color and a palette the color belongs to, find another color in that
 * palette given an offset. The offset should be a number representing how many
 * shades darker or lighter we want with the direction specificed by
 * `offsetDirection`. If we try to go beyond the bounds, we'll return the
 * closest item we can. In other words, if we pass `Infinity` and `darker`, then
 * we'll return the darkest color in the palette. If we pass `Infinity` and `lighter` we'll
 * return the lightest color in the palette.
 *
 * This function will throw if `color` is not one of the values in `palette`.
 *
 * @param offset A number representing how many shades away from the original
 * `color` to return. If the offset goes beyond the bounds of the palette, the most extreme color
 * in that direction will be chosen.
 * @param offsetDirection Which direction we wish to be offset, `"lighter"` or `"darker"`.
 * @param color A color in one of our palettes
 */
export declare function getOffsetInPalette(offset: number, offsetDirection: "lighter" | "darker", color: ShadedColor): ShadedColor;
