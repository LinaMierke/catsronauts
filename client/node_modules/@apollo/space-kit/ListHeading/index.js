'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _tslib = require('../_tslib-bcbe0269.js');
var core = require('@emotion/core');
var React = require('react');
var React__default = _interopDefault(React);
var colors = require('../colors/colors.js');
require('../assertUnreachable-18645656.js');
require('classnames');
require('tinycolor2');
require('../index-03cf0138.js');
require('../verticalListMarginFromPadding-9fe8567b.js');
var index$1 = require('../ListItem/index.js');

/**
 * Heading intended to be used in a list. Can also be used to deliniate between
 * sections in a single list.
 *
 * Composed with and accepts all props of `ListItem`
 */
var ListHeading = React__default.forwardRef(function (_a, ref) {
    var children = _a.children, count = _a.count, props = _tslib.__rest(_a, ["children", "count"]);
    // Stop click events so we don't try to close the list when clicking something
    // non-interactive
    var handleClick = React__default.useCallback(function (event) {
        var _a;
        event.preventDefault();
        event.stopPropagation();
        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, event);
    }, [props.onClick]);
    return (core.jsx(index$1.ListItem, _tslib.__assign({}, props, { interactive: false, onClick: handleClick, ref: ref }),
        core.jsx("h2", { css: core.css({
                display: "flex",
                fontSize: "inherit",
                fontWeight: 600,
                margin: 0,
                marginBottom: 2,
                marginTop: 3,
                textTransform: "uppercase",
                width: "100%",
            }), ref: ref },
            core.jsx("span", { css: core.css({ flex: "1" }) }, children),
            count && (core.jsx("span", { css: core.css({
                    color: colors.colors.grey.light,
                    flex: "none",
                    fontWeight: "normal",
                }) }, count)))));
});

exports.ListHeading = ListHeading;
//# sourceMappingURL=index.js.map
