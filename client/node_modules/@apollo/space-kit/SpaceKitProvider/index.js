'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _tslib = require('../_tslib-bcbe0269.js');
var React = require('react');
var React__default = _interopDefault(React);

var defaultState = {
    disableAnimations: false,
    theme: "light",
};
// This implementation is based on the excellent blog post by Kent C. Dodds on
// How to use React Context effectively:
// https://kentcdodds.com/blog/how-to-use-react-context-effectively
var SpaceKitStateContext = React__default.createContext(undefined);
var SpaceKitSetContext = React__default.createContext(undefined);
/**
 * Provider to set options on all Space Kit components
 *
 * This is completely optional; components will not have issues if this is
 * missing from the context.
 *
 * A good place to use this would be in your storybook configuration as a
 * decorator applied to all components if we're running inside of chromatic.
 */
var SpaceKitProvider = function (_a) {
    var children = _a.children, stateProps = _tslib.__rest(_a, ["children"]);
    var _b = React__default.useState(_tslib.__assign(_tslib.__assign({}, defaultState), stateProps)), state = _b[0], setState = _b[1];
    return (React__default.createElement(SpaceKitStateContext.Provider, { value: state },
        React__default.createElement(SpaceKitSetContext.Provider, { value: setState }, children)));
};
/**
 * Hook to get the values from the Space Kit Provider with sensible defaults for
 * all the values.
 *
 * This component does _not_ require us to be wrapped with `SpaceKitProvider`
 */
function useSpaceKitProvider() {
    var context = React__default.useContext(SpaceKitStateContext);
    if (context == null) {
        // Provide a default because consumers are not required to wrap their
        // components with our providers
        return defaultState;
    }
    return context;
}

exports.SpaceKitProvider = SpaceKitProvider;
exports.useSpaceKitProvider = useSpaceKitProvider;
//# sourceMappingURL=index.js.map
