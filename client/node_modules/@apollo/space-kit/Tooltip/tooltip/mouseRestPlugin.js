'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// @see https://atomiks.github.io/tippyjs/misc/#onmouserest-implementation
var mouseRest = {
    name: "mouseRest",
    defaultValue: false,
    fn: function (instance) {
        var reference = instance.reference;
        var DEBOUNCE_MS = 80;
        var timeout;
        // If the `trigger` isn't `"mouseenter"`, then this plugin doesn't apply.
        function getIsEnabled() {
            var isEnabled = !instance.props.interactive &&
                instance.props.trigger.indexOf("mouseenter") !== -1;
            return isEnabled;
        }
        return {
            onCreate: function () {
                if (!getIsEnabled()) {
                    return;
                }
                var triggerWithoutMouseEnter = instance.props.trigger
                    .replace("mouseenter", "")
                    .trim();
                instance.setProps({ trigger: triggerWithoutMouseEnter });
                reference.addEventListener("mousemove", function () {
                    clearTimeout(timeout);
                    timeout = window.setTimeout(function () { return instance.show(); }, DEBOUNCE_MS);
                });
                reference.addEventListener("mouseleave", function () {
                    clearTimeout(timeout);
                    instance.hide();
                });
            },
            onDestroy: function () {
                clearTimeout(timeout);
            },
        };
    },
};

exports.mouseRest = mouseRest;
//# sourceMappingURL=mouseRestPlugin.js.map
