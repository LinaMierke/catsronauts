{"version":3,"file":"index-03cf0138.js","sources":["src/ListConfig/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { ShadedColor, colors } from \"../colors\";\n\n/**\n * Enumeration of all icon sizes\n *\n * This uses string literals instead of a TypeScript union so we can use\n * strings, like `\"small\"`, for props instead of `IconSize.small`\n */\ntype IconSize = \"small\" | \"normal\" | \"large\";\n\ninterface ListConfig {\n  /**\n   * Override the the default element used to render `endIcon`\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged.\n   *\n   * @default <div />\n   */\n  endIconAs: React.ReactElement;\n\n  /**\n   * Background color of the hovered item in a menu\n   *\n   * The text color will be determined automatically. `null` indicates we don't\n   * want to show any different styling on hover.\n   */\n  hoverColor: ShadedColor | null;\n\n  /**\n   * Icon size to use for all descendents\n   */\n  iconSize: IconSize;\n\n  /**\n   * Padding level on menu items\n   */\n  padding: \"normal\" | \"relaxed\";\n\n  /**\n   * Background color of the selected item in a menu\n   *\n   * The text color will be determined automatically\n   */\n  selectedColor: ShadedColor;\n\n  /**\n   * Override the the default element used to render `startIcon`\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged.\n   *\n   * @default <div />\n   */\n  startIconAs: React.ReactElement;\n}\n\n/**\n * Default values for each property\n */\nexport const defaults: ListConfig = {\n  endIconAs: <div />,\n  hoverColor: colors.silver.light,\n  iconSize: \"normal\",\n  padding: \"normal\",\n  selectedColor: colors.blue.base,\n  startIconAs: <div />,\n};\n\n/**\n * Context holding all configuration options for lists\n */\nconst ListConfigContext = React.createContext<Partial<ListConfig> | undefined>(\n  undefined\n);\n\n/**\n * Provider to set list config on the context\n */\nexport const ListConfigProvider: React.FC<Partial<ListConfig>> = ({\n  children,\n  ...props\n}) => {\n  return (\n    <ListConfigContext.Provider value={props}>\n      {children}\n    </ListConfigContext.Provider>\n  );\n};\n\nexport function useListConfig(): ListConfig {\n  return {\n    ...defaults,\n    ...(React.useContext(ListConfigContext) || {}),\n  };\n}\n"],"names":["React","colors"],"mappings":";;;;;;;;;AA0DA;;;AAGA,AAAO,IAAM,QAAQ,GAAe;IAClC,SAAS,EAAEA,yCAAO;IAClB,UAAU,EAAEC,aAAM,CAAC,MAAM,CAAC,KAAK;IAC/B,QAAQ,EAAE,QAAQ;IAClB,OAAO,EAAE,QAAQ;IACjB,aAAa,EAAEA,aAAM,CAAC,IAAI,CAAC,IAAI;IAC/B,WAAW,EAAED,yCAAO;CACrB,CAAC;;;;AAKF,IAAM,iBAAiB,GAAGA,cAAK,CAAC,aAAa,CAC3C,SAAS,CACV,CAAC;;;;AAKF,IAAa,kBAAkB,GAAkC,UAAC,EAGjE;IAFC,IAAA,QAAQ,cAAA,EACL,KAAK,qBAFwD,YAGjE,CADS;IAER,QACEA,6BAAC,iBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK,IACrC,QAAQ,CACkB,EAC7B;CACH,CAAC;AAEF,SAAgB,aAAa;IAC3B,2CACK,QAAQ,IACPA,cAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAC7C;CACH;;;;;"}