import React from "react";
import { ShadedColor } from "../colors";
/**
 * Enumeration of all icon sizes
 *
 * This uses string literals instead of a TypeScript union so we can use
 * strings, like `"small"`, for props instead of `IconSize.small`
 */
declare type IconSize = "small" | "normal" | "large";
interface ListConfig {
    /**
     * Override the the default element used to render `endIcon`
     *
     * All props provided will be merged with props that this component adds,
     * including `className`s being merged.
     *
     * @default <div />
     */
    endIconAs: React.ReactElement;
    /**
     * Background color of the hovered item in a menu
     *
     * The text color will be determined automatically. `null` indicates we don't
     * want to show any different styling on hover.
     */
    hoverColor: ShadedColor | null;
    /**
     * Icon size to use for all descendents
     */
    iconSize: IconSize;
    /**
     * Padding level on menu items
     */
    padding: "normal" | "relaxed";
    /**
     * Background color of the selected item in a menu
     *
     * The text color will be determined automatically
     */
    selectedColor: ShadedColor;
    /**
     * Override the the default element used to render `startIcon`
     *
     * All props provided will be merged with props that this component adds,
     * including `className`s being merged.
     *
     * @default <div />
     */
    startIconAs: React.ReactElement;
}
/**
 * Default values for each property
 */
export declare const defaults: ListConfig;
/**
 * Provider to set list config on the context
 */
export declare const ListConfigProvider: React.FC<Partial<ListConfig>>;
export declare function useListConfig(): ListConfig;
export {};
