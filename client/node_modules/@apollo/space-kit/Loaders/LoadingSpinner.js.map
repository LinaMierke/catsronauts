{"version":3,"file":"LoadingSpinner.js","sources":["../src/Loaders/LoadingSpinner.tsx"],"sourcesContent":["/** @jsx jsx */\nimport React from \"react\";\nimport type { Property } from \"csstype\";\nimport { jsx, keyframes } from \"@emotion/core\";\nimport { colors } from \"../colors\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\n\nexport type Size = \"large\" | \"medium\" | \"small\" | \"xsmall\" | \"2xsmall\";\nexport type Theme = \"light\" | \"dark\" | \"grayscale\";\ninterface Props {\n  /**\n   * Class name that will be applied to the svg\n   */\n  className?: string;\n\n  /**\n   * Theme for the spinner\n   * @default \"light\"\n   */\n  theme?: Theme;\n\n  /**\n   * Size of the spinner\n   * @default \"medium\"\n   */\n  size?: Size;\n}\n\nexport const LoadingSpinner = React.forwardRef<SVGSVGElement, Props>(\n  ({ theme = \"light\", size = \"medium\", className, ...props }, ref) => {\n    /* Length of animation */\n    const DURATION = 1000;\n\n    const SPIN = keyframes`\n    0% { transform: rotate(0) }\n    100% { transform: rotate(360deg) }\n  `;\n\n    const SIZE_MAP: Record<Size, number> = {\n      large: 90,\n      medium: 64,\n      small: 48,\n      xsmall: 32,\n      \"2xsmall\": 16,\n    };\n\n    const THEME_MAP: Record<\n      Theme,\n      {\n        orbitColor: Property.Color;\n        orbitOpacity: Property.Opacity;\n        asteroidColor: Property.Color;\n      }\n    > = {\n      light: {\n        orbitColor: colors.silver.base,\n        orbitOpacity: 1,\n        asteroidColor: colors.blue.base,\n      },\n      dark: {\n        orbitColor: colors.white,\n        orbitOpacity: 0.5,\n        asteroidColor: colors.white,\n      },\n      grayscale: {\n        orbitColor: colors.silver.darker,\n        orbitOpacity: 1,\n        asteroidColor: colors.grey.light,\n      },\n    };\n\n    const { disableAnimations } = useSpaceKitProvider();\n\n    const { orbitColor, orbitOpacity, asteroidColor } = THEME_MAP[theme];\n\n    const pixelSize = SIZE_MAP[size];\n\n    const mountTime = React.useRef(Date.now());\n    const mountDelay = disableAnimations ? 0 : -(mountTime.current % DURATION);\n\n    return (\n      <svg\n        className={className}\n        ref={ref}\n        role=\"progressbar\"\n        viewBox=\"0 0 100 100\"\n        css={{\n          width: pixelSize,\n          height: pixelSize,\n        }}\n        {...props}\n      >\n        <circle\n          strokeWidth=\"8\"\n          stroke={orbitColor}\n          strokeOpacity={orbitOpacity}\n          fill=\"transparent\"\n          r=\"41\"\n          cx=\"50\"\n          cy=\"50\"\n        />\n        <g transform=\"translate(50 50)\">\n          <circle\n            css={{\n              animation: `${SPIN} ${DURATION}ms linear infinite`,\n              willChange: \"transform\",\n              animationDelay: `${mountDelay}ms`,\n            }}\n            fill={asteroidColor}\n            r=\"10\"\n            cx=\"40\"\n            cy=\"0\"\n          />\n        </g>\n      </svg>\n    );\n  }\n);\n"],"names":["React","keyframes","colors","useSpaceKitProvider","jsx"],"mappings":";;;;;;;;;;;;;IA4Ba,cAAc,GAAGA,cAAK,CAAC,UAAU,CAC5C,UAAC,EAAyD,EAAE,GAAG;IAA5D,IAAA,aAAe,EAAf,KAAK,mBAAG,OAAO,KAAA,EAAE,YAAe,EAAf,IAAI,mBAAG,QAAQ,KAAA,EAAE,SAAS,eAAA,EAAK,KAAK,qBAAvD,8BAAyD,CAAF;;IAEtD,IAAM,QAAQ,GAAG,IAAI,CAAC;IAEtB,IAAM,IAAI,GAAGC,cAAS,yJAAA,+EAGvB,IAAA,CAAC;IAEA,IAAM,QAAQ,GAAyB;QACrC,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;QACV,SAAS,EAAE,EAAE;KACd,CAAC;IAEF,IAAM,SAAS,GAOX;QACF,KAAK,EAAE;YACL,UAAU,EAAEC,aAAM,CAAC,MAAM,CAAC,IAAI;YAC9B,YAAY,EAAE,CAAC;YACf,aAAa,EAAEA,aAAM,CAAC,IAAI,CAAC,IAAI;SAChC;QACD,IAAI,EAAE;YACJ,UAAU,EAAEA,aAAM,CAAC,KAAK;YACxB,YAAY,EAAE,GAAG;YACjB,aAAa,EAAEA,aAAM,CAAC,KAAK;SAC5B;QACD,SAAS,EAAE;YACT,UAAU,EAAEA,aAAM,CAAC,MAAM,CAAC,MAAM;YAChC,YAAY,EAAE,CAAC;YACf,aAAa,EAAEA,aAAM,CAAC,IAAI,CAAC,KAAK;SACjC;KACF,CAAC;IAEM,IAAA,iBAAiB,GAAKC,yBAAmB,EAAE,kBAA1B,CAA2B;IAE9C,IAAA,KAA8C,SAAS,CAAC,KAAK,CAAC,EAA5D,UAAU,gBAAA,EAAE,YAAY,kBAAA,EAAE,aAAa,mBAAqB,CAAC;IAErE,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEjC,IAAM,SAAS,GAAGH,cAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3C,IAAM,UAAU,GAAG,iBAAiB,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;IAE3E,QACEI,kCACE,SAAS,EAAE,SAAS,EACpB,GAAG,EAAE,GAAG,EACR,IAAI,EAAC,aAAa,EAClB,OAAO,EAAC,aAAa,EACrB,GAAG,EAAE;YACH,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,SAAS;SAClB,IACG,KAAK;QAETA,qBACE,WAAW,EAAC,GAAG,EACf,MAAM,EAAE,UAAU,EAClB,aAAa,EAAE,YAAY,EAC3B,IAAI,EAAC,aAAa,EAClB,CAAC,EAAC,IAAI,EACN,EAAE,EAAC,IAAI,EACP,EAAE,EAAC,IAAI,GACP;QACFA,gBAAG,SAAS,EAAC,kBAAkB;YAC7BA,qBACE,GAAG,EAAE;oBACH,SAAS,EAAK,IAAI,SAAI,QAAQ,uBAAoB;oBAClD,UAAU,EAAE,WAAW;oBACvB,cAAc,EAAK,UAAU,OAAI;iBAClC,EACD,IAAI,EAAE,aAAa,EACnB,CAAC,EAAC,IAAI,EACN,EAAE,EAAC,IAAI,EACP,EAAE,EAAC,GAAG,GACN,CACA,CACA,EACN;CACH,CACF,CAAC;;;;;"}