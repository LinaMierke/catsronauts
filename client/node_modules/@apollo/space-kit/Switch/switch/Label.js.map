{"version":3,"file":"Label.js","sources":["../../src/Switch/switch/Label.tsx"],"sourcesContent":["import React from \"react\";\nimport { ClassNames } from \"@emotion/core\";\n\ntype LabelProps = React.DetailedHTMLProps<\n  React.LabelHTMLAttributes<HTMLLabelElement>,\n  HTMLLabelElement\n>;\n\n/**\n * Label used by `Toggle`\n *\n * This can be used to emulate what a label would look like if it were used by a\n * `Toggle` in the even that you can't use the `Toggle`'s label.\n */\nexport const Label: React.FC<LabelProps> = ({\n  children,\n  className,\n  ...props\n}) => {\n  return (\n    <ClassNames>\n      {({ css, cx }) => (\n        <label\n          {...props}\n          className={cx(\n            css({\n              alignItems: \"center\",\n              display: \"flex\",\n              fontWeight: 600,\n            }),\n            className\n          )}\n        >\n          {children}\n        </label>\n      )}\n    </ClassNames>\n  );\n};\n"],"names":["React","ClassNames"],"mappings":";;;;;;;;;;;AAQA;;;;;;AAMA,IAAa,KAAK,GAAyB,UAAC,EAI3C;IAHC,IAAA,QAAQ,cAAA,EACR,SAAS,eAAA,EACN,KAAK,qBAHkC,yBAI3C,CADS;IAER,QACEA,6BAACC,eAAU,QACR,UAAC,EAAW;YAAT,GAAG,SAAA,EAAE,EAAE,QAAA;QAAO,QAChBD,0DACM,KAAK,IACT,SAAS,EAAE,EAAE,CACX,GAAG,CAAC;gBACF,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,GAAG;aAChB,CAAC,EACF,SAAS,CACV,KAEA,QAAQ,CACH;KACT,CACU,EACb;CACH;;;;"}