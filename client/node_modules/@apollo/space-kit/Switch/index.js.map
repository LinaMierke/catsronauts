{"version":3,"file":"index.js","sources":["../src/Switch/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { ClassNames } from \"@emotion/core\";\nimport { ShadedColor, colors } from \"../colors\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useSwitch } from \"@react-aria/switch\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\nimport { motion } from \"framer-motion\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\nimport { Label } from \"./switch/Label\";\n\ntype SwitchProps = {\n  /**\n   * `className` to apply to the bounding `label`\n   */\n  className?: string;\n  /**\n   * `style` to apply to the bounding `label`\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Color to use for the checkbox itself. The check color and the border color\n   * will be automatically calculated.\n   *\n   * @default colors.blue.base\n   */\n  color?: ShadedColor;\n\n  /**\n   * Force the focused styling\n   *\n   * This prop is typed as `never` so you can never legally pass it. This is\n   * intended only for testing because there's no other way to test a focus\n   * ring. The only place we're actually using this is in an `mdx` file, which\n   * doesn't check props with TypeScript.\n   *\n   * There's got to be a better way to do this; I just don't know what it is\n   * :shrug:\n   */\n  isFocusVisible?: never;\n\n  /**\n   * Size to display the toggle at\n   *\n   * @default \"normal\"\n   */\n  size?: \"normal\" | \"large\";\n\n  /**\n   * Show the \"ON\" or \"OFF\" textual state\n   *\n   * @default `true`\n   */\n  showTextualState?: boolean;\n\n  theme?: \"light\" | \"dark\";\n} & Parameters<typeof useSwitch>[0] &\n  Parameters<typeof useFocusRing>[0];\n\nexport const Switch: React.FC<SwitchProps> & { Label: typeof Label } = ({\n  className,\n  style,\n  color = colors.blue.base,\n  isFocusVisible: isFocusVisibleFromProps,\n  showTextualState = true,\n  size = \"normal\",\n  theme: propsTheme,\n  ...props\n}) => {\n  const state = useToggleState(props);\n  const ref = React.useRef<HTMLInputElement | null>(null);\n  const { inputProps } = useSwitch(props, state, ref);\n  const {\n    isFocusVisible: isFocusVisibleFromFocusRing,\n    focusProps,\n  } = useFocusRing(props);\n  // FYI: Hooks can't be called conditionally, so we must call the hook and then\n  // use the `||` in the subseuent line instead of combining them.\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propsTheme || providerTheme;\n\n  const isFocusVisible =\n    (!props.isDisabled && isFocusVisibleFromProps) ||\n    isFocusVisibleFromFocusRing;\n\n  /** Size, in pixels, of the dot that will be the switch */\n  const dotSize =\n    size === \"normal\" ? 12 : size === \"large\" ? 18 : assertUnreachable(size);\n  const borderSize =\n    size === \"normal\" ? 2 : size === \"large\" ? 3 : assertUnreachable(size);\n\n  return (\n    <ClassNames>\n      {({ css, cx }) => (\n        <Label\n          className={cx(\n            css({\n              opacity: props.isDisabled ? 0.5 : undefined,\n              position: \"relative\",\n            }),\n            className\n          )}\n          style={style}\n        >\n          <VisuallyHidden>\n            <input {...inputProps} {...focusProps} ref={ref} />\n          </VisuallyHidden>\n\n          <div\n            className={css({\n              flex: 1,\n              marginRight: showTextualState\n                ? 12\n                : size === \"large\"\n                ? 30\n                : size === \"normal\"\n                ? undefined\n                : assertUnreachable(size),\n            })}\n          >\n            {props.children}\n          </div>\n\n          {showTextualState && (\n            <div\n              aria-hidden\n              className={css({\n                color:\n                  theme === \"light\"\n                    ? props.isDisabled\n                      ? undefined\n                      : state.isSelected\n                      ? undefined\n                      : colors.grey.base\n                    : theme === \"dark\"\n                    ? props.isDisabled\n                      ? undefined\n                      : state.isSelected\n                      ? colors.white\n                      : colors.midnight.lighter\n                    : assertUnreachable(theme),\n                fontWeight: state.isSelected ? 600 : 400,\n                marginRight: 8,\n              })}\n            >\n              {state.isSelected ? \"ON\" : \"OFF\"}\n            </div>\n          )}\n\n          <div\n            aria-hidden\n            key={props.isDisabled ? \"disabled\" : \"enabled\"}\n            className={css({\n              backgroundColor: state.isSelected ? color : colors.grey.light,\n              borderRadius: dotSize / 2 + borderSize,\n              boxShadow: [\n                isFocusVisible && `0 0 0 2px ${colors.blue.lighter}`,\n                !props.isDisabled && \"inset 0 0 1px 0 rgba(18, 21, 26, 0.4)\",\n              ]\n                // The generic attached to the filter return type will indicate\n                // to TypeScript that we're stripping out all non-strings,\n                // meaning the booleans.\n                .filter((value): value is string => !!value)\n                .join(\", \"),\n              cursor: !props.isDisabled ? \"pointer\" : undefined,\n              height: dotSize + borderSize * 2,\n              padding: borderSize,\n              position: \"relative\",\n              width: (8 / 3) * dotSize,\n            })}\n          >\n            <motion.div\n              animate={{\n                x: state.isSelected ? dotSize + borderSize * 2 : 0,\n              }}\n              initial={false}\n              transition={{\n                type: \"spring\",\n                stiffness: 150,\n                damping: 200,\n                mass: 0.2,\n                velocity: 8,\n              }}\n              className={css({\n                backgroundColor: colors.white,\n                borderRadius: \"100%\",\n                height: dotSize,\n                position: \"absolute\",\n                top: borderSize,\n                width: dotSize,\n              })}\n            />\n          </div>\n        </Label>\n      )}\n    </ClassNames>\n  );\n};\n\nSwitch.Label = Label;\n"],"names":["colors","useToggleState","React","useSwitch","useFocusRing","useSpaceKitProvider","assertUnreachable","ClassNames","Label","VisuallyHidden","motion"],"mappings":"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"}