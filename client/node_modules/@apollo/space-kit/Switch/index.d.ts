import React from "react";
import { ShadedColor } from "../colors";
import { useFocusRing } from "@react-aria/focus";
import { useSwitch } from "@react-aria/switch";
import { Label } from "./switch/Label";
declare type SwitchProps = {
    /**
     * `className` to apply to the bounding `label`
     */
    className?: string;
    /**
     * `style` to apply to the bounding `label`
     */
    style?: React.CSSProperties;
    /**
     * Color to use for the checkbox itself. The check color and the border color
     * will be automatically calculated.
     *
     * @default colors.blue.base
     */
    color?: ShadedColor;
    /**
     * Force the focused styling
     *
     * This prop is typed as `never` so you can never legally pass it. This is
     * intended only for testing because there's no other way to test a focus
     * ring. The only place we're actually using this is in an `mdx` file, which
     * doesn't check props with TypeScript.
     *
     * There's got to be a better way to do this; I just don't know what it is
     * :shrug:
     */
    isFocusVisible?: never;
    /**
     * Size to display the toggle at
     *
     * @default "normal"
     */
    size?: "normal" | "large";
    /**
     * Show the "ON" or "OFF" textual state
     *
     * @default `true`
     */
    showTextualState?: boolean;
    theme?: "light" | "dark";
} & Parameters<typeof useSwitch>[0] & Parameters<typeof useFocusRing>[0];
export declare const Switch: React.FC<SwitchProps> & {
    Label: typeof Label;
};
export {};
