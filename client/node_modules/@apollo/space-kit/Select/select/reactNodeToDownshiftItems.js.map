{"version":3,"file":"reactNodeToDownshiftItems.js","sources":["../../src/Select/select/reactNodeToDownshiftItems.ts"],"sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\n\ntype OptionProps = Omit<\n  React.DetailedHTMLProps<\n    React.OptionHTMLAttributes<HTMLOptionElement>,\n    HTMLOptionElement\n  >,\n  \"children\"\n> & { children: string };\n\ntype OptgroupProps = React.DetailedHTMLProps<\n  React.OptgroupHTMLAttributes<HTMLOptGroupElement>,\n  HTMLOptGroupElement\n>;\n\nexport function isHTMLOptionElement(\n  element: React.ReactNode\n): element is React.ReactElement<OptionProps, \"option\"> {\n  if (!React.isValidElement(element)) {\n    return false;\n  }\n\n  // This is a special check performed only for MDX processing in storybook\n  if (element.props.originalType) {\n    return element.props.originalType === \"option\";\n  }\n\n  if (typeof element.type === \"string\") {\n    return element.type === \"option\";\n  }\n\n  return renderHTML(element) instanceof HTMLOptionElement;\n}\n\nfunction renderHTML(element: React.ReactElement) {\n  const div = document.createElement(\"div\");\n  render(element, div);\n\n  if (div.childNodes.length !== 1) {\n    throw new Error(\"BUG: must only have one child\");\n  }\n  return div.childNodes[0];\n}\n\nexport function isHTMLOptgroupElement(\n  element: React.ReactNode\n): element is React.ReactElement<OptgroupProps, \"optgroup\"> {\n  if (!React.isValidElement(element)) {\n    return false;\n  }\n\n  // This is a special check performed only for MDX processing in storybook\n  if (element.props.originalType) {\n    return element.props.originalType === \"optgroup\";\n  }\n\n  if (typeof element.type === \"string\") {\n    return element.type === \"optgroup\";\n  }\n\n  return renderHTML(element) instanceof HTMLOptGroupElement;\n}\n\n/**\n * Convert a `children` prop rendered with `<optgroup><option /></optgroup>` and\n * `<option />` elements into an array of the props of each of those `option`\n * elements.\n */\nexport function reactNodeToDownshiftItems(\n  children: React.ReactNode\n): OptionProps[] {\n  return React.Children.toArray(children).reduce<OptionProps[]>(\n    (accumulator, child) => {\n      if (isHTMLOptionElement(child)) {\n        return accumulator.concat(child.props);\n      }\n\n      if (!React.isValidElement(child)) {\n        return accumulator;\n      }\n\n      return accumulator.concat(\n        React.Children.toArray(child.props.children)\n          .filter(isHTMLOptionElement)\n          .map((optgroupChild) => optgroupChild.props)\n      );\n    },\n    []\n  );\n}\n"],"names":["React","render"],"mappings":";;;;;;;;;;SAgBgB,mBAAmB,CACjC,OAAwB;IAExB,IAAI,CAACA,cAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;QAClC,OAAO,KAAK,CAAC;KACd;;IAGD,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE;QAC9B,OAAO,OAAO,CAAC,KAAK,CAAC,YAAY,KAAK,QAAQ,CAAC;KAChD;IAED,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;QACpC,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC;KAClC;IAED,OAAO,UAAU,CAAC,OAAO,CAAC,YAAY,iBAAiB,CAAC;CACzD;AAED,SAAS,UAAU,CAAC,OAA2B;IAC7C,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1CC,eAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAErB,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;KAClD;IACD,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;CAC1B;AAED,SAAgB,qBAAqB,CACnC,OAAwB;IAExB,IAAI,CAACD,cAAK,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;QAClC,OAAO,KAAK,CAAC;KACd;;IAGD,IAAI,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE;QAC9B,OAAO,OAAO,CAAC,KAAK,CAAC,YAAY,KAAK,UAAU,CAAC;KAClD;IAED,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;QACpC,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,CAAC;KACpC;IAED,OAAO,UAAU,CAAC,OAAO,CAAC,YAAY,mBAAmB,CAAC;CAC3D;;;;;;AAOD,SAAgB,yBAAyB,CACvC,QAAyB;IAEzB,OAAOA,cAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAC5C,UAAC,WAAW,EAAE,KAAK;QACjB,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACxC;QAED,IAAI,CAACA,cAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAChC,OAAO,WAAW,CAAC;SACpB;QAED,OAAO,WAAW,CAAC,MAAM,CACvBA,cAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;aACzC,MAAM,CAAC,mBAAmB,CAAC;aAC3B,GAAG,CAAC,UAAC,aAAa,IAAK,OAAA,aAAa,CAAC,KAAK,GAAA,CAAC,CAC/C,CAAC;KACH,EACD,EAAE,CACH,CAAC;CACH;;;;;;"}